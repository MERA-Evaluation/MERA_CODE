task: codelintereval
dataset_path: MERA-evaluation/CodeLinterEval

training_split: shots
fewshot_split: shots
test_split: test

output_type: generate_until
fewshot_delimiter: "\n\n"
target_delimiter: " "

num_fewshot: null
repeats: 10

fewshot_config:
  sampler: !function ../custom_samplers.FewshotSampler  # processes no instruction doc and changes doc_to_text
  doc_to_text_without_instruction: "Код:\n{{inputs.code.rstrip()}} Ошибки от линтера: {{inputs.feedback.rstrip()}}"
  query: "{{instruction.format(**inputs).strip()}}"

doc_to_target: "{{meta['canonical_code']}}"
doc_to_text: "{{instruction.format(**inputs).strip() if inputs is mapping else instruction.format(inputs=inputs).strip()}}"

generation_kwargs:
  do_sample: true
  temperature: 0.6
  max_gen_toks: 1024

process_results: !function utils.process_results
filter_list:
  - name: "scoring"
    filter:
      - function: rucodelinterevalscoring

metric_list:
  - metric: pass@1
    aggregation: mean
    higher_is_better: true
  - metric: pass@5
    aggregation: mean
    higher_is_better: true
  - metric: pass@10
    aggregation: mean
    higher_is_better: true

metadata:
  version: 1.0
